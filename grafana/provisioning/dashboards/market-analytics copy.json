{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "grafana-postgresql-datasource",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 100,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# ðŸ“Š Market Overview",
        "mode": "markdown"
      },
      "pluginVersion": "10.0.0",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Current price from most liquid exchange",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 2
      },
      "id": 101,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT last_price as value\nFROM market_data\nWHERE symbol = '$symbol'\n  AND exchange = 'binance_perps'\n  AND $__timeFilter(timestamp)\nORDER BY timestamp DESC\nLIMIT 1",
          "refId": "A"
        }
      ],
      "title": "Current Price",
      "type": "stat"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "24-hour price change percentage",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 0
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 4,
        "y": 2
      },
      "id": 102,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH first_price AS (\n  SELECT last_price, timestamp\n  FROM market_data\n  WHERE symbol = '$symbol'\n    AND exchange = 'binance_perps'\n  ORDER BY timestamp ASC\n  LIMIT 1\n),\ncurrent_price AS (\n  SELECT last_price, timestamp\n  FROM market_data\n  WHERE symbol = '$symbol'\n    AND exchange = 'binance_perps'\n  ORDER BY timestamp DESC\n  LIMIT 1\n)\nSELECT \n  CASE \n    WHEN EXTRACT(EPOCH FROM (cp.timestamp - fp.timestamp)) >= 86400 THEN\n      ROUND(((cp.last_price - fp.last_price) / fp.last_price * 100)::numeric, 2)\n    ELSE\n      ROUND(((cp.last_price - fp.last_price) / fp.last_price * 100)::numeric, 2)\n  END as value\nFROM current_price cp, first_price fp",
          "refId": "A"
        }
      ],
      "title": "Period Change %",
      "type": "stat"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Current bid-ask spread across exchanges",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 5
              },
              {
                "color": "red",
                "value": 10
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 8,
        "y": 2
      },
      "id": 103,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  AVG((ask_price - bid_price) / bid_price * 10000) as value\nFROM market_data\nWHERE symbol = '$symbol'\n  AND $__timeFilter(timestamp)\n  AND (CASE \n    WHEN '${exchange_view:raw}' = '__all' THEN exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n    ELSE exchange = '${exchange_view:raw}'\n  END)\n  AND bid_price > 0 AND ask_price > 0",
          "refId": "A"
        }
      ],
      "title": "Avg Spread (bps)",
      "type": "stat"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Total unique trades in selected period",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 12,
        "y": 2
      },
      "id": 104,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  COUNT(DISTINCT trade_id) as value\nFROM trades\nWHERE symbol = '$symbol'\n  AND $__timeFilter(timestamp)\n  AND (CASE \n    WHEN '${exchange_view:raw}' = '__all' THEN exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n    ELSE exchange = '${exchange_view:raw}'\n  END)",
          "refId": "A"
        }
      ],
      "title": "Total Trades",
      "type": "stat"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Price",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "mean"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT * FROM (\n  SELECT \n    timestamp AS \"time\",\n    exchange || '_bid' as metric,\n    bid_price as value\n  FROM market_data\n  WHERE \n    symbol = '$symbol' AND (CASE WHEN '${exchange_view:raw}' = '__all' THEN TRUE ELSE exchange = '${exchange_view:raw}' END) AND\n    bid_price > 0 AND ask_price > 0 AND\n    $__timeFilter(timestamp)\n  \n  UNION ALL\n  \n  SELECT \n    timestamp AS \"time\",\n    exchange || '_ask' as metric,\n    ask_price as value\n  FROM market_data\n  WHERE \n    symbol = '$symbol' AND (CASE WHEN '${exchange_view:raw}' = '__all' THEN TRUE ELSE exchange = '${exchange_view:raw}' END) AND\n    bid_price > 0 AND ask_price > 0 AND\n    $__timeFilter(timestamp)\n) AS combined\nORDER BY time, metric",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "time",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Real-time Bid/Ask Prices",
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Spread (bps)",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Binance Perps"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Bitget"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Gate.io"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "KuCoin"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 0
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  $__timeGroupAlias(timestamp, 30s),\n  AVG((ask_price - bid_price) / NULLIF(bid_price, 0) * 10000) as \"Binance Perps\"\nFROM market_data\nWHERE \n  symbol = '$symbol' AND \n  exchange = 'binance_perps' AND\n  bid_price > 0 AND ask_price > 0 AND\n  $__timeFilter(timestamp)\nGROUP BY 1\nORDER BY 1",
          "refId": "A"
        },
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  $__timeGroupAlias(timestamp, 30s),\n  AVG((ask_price - bid_price) / NULLIF(bid_price, 0) * 10000) as \"Bitget\"\nFROM market_data\nWHERE \n  symbol = '$symbol' AND \n  exchange = 'bitget' AND\n  bid_price > 0 AND ask_price > 0 AND\n  $__timeFilter(timestamp)\nGROUP BY 1\nORDER BY 1",
          "refId": "B"
        },
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  $__timeGroupAlias(timestamp, 30s),\n  AVG((ask_price - bid_price) / NULLIF(bid_price, 0) * 10000) as \"Gate.io\"\nFROM market_data\nWHERE \n  symbol = '$symbol' AND \n  exchange = 'gate' AND\n  bid_price > 0 AND ask_price > 0 AND\n  $__timeFilter(timestamp)\nGROUP BY 1\nORDER BY 1",
          "refId": "C"
        },
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  $__timeGroupAlias(timestamp, 30s),\n  AVG((ask_price - bid_price) / NULLIF(bid_price, 0) * 10000) as \"KuCoin\"\nFROM market_data\nWHERE \n  symbol = '$symbol' AND \n  exchange = 'kucoin' AND\n  bid_price > 0 AND ask_price > 0 AND\n  $__timeFilter(timestamp)\nGROUP BY 1\nORDER BY 1",
          "refId": "D"
        }
      ],
      "title": "Spread History (All Exchanges)",
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Current spread for each exchange",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Current"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Current (bps)"
              },
              {
                "id": "decimals",
                "value": 4
              },
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Mean"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Mean (bps)"
              },
              {
                "id": "decimals",
                "value": 4
              },
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Min"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Min (bps)"
              },
              {
                "id": "decimals",
                "value": 4
              },
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Max"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Max (bps)"
              },
              {
                "id": "decimals",
                "value": 4
              },
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "id": 21,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": ["sum"],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Current (bps)"
          }
        ]
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH spread_stats AS (\n  SELECT \n    exchange,\n    (ask_price - bid_price) / NULLIF(bid_price, 0) * 10000 as spread_bps,\n    timestamp\n  FROM market_data\n  WHERE \n    symbol = '$symbol' AND \n    bid_price > 0 AND ask_price > 0 AND\n    $__timeFilter(timestamp)\n),\nlatest_spread AS (\n  SELECT DISTINCT ON (exchange)\n    exchange,\n    spread_bps as current_spread\n  FROM spread_stats\n  ORDER BY exchange, timestamp DESC\n)\nSELECT \n  CASE s.exchange\n    WHEN 'binance_perps' THEN 'Binance Perps'\n    WHEN 'bitget' THEN 'Bitget'\n    WHEN 'gate' THEN 'Gate.io'\n    WHEN 'kucoin' THEN 'KuCoin'\n    ELSE s.exchange\n  END as \"Exchange\",\n  ROUND(l.current_spread::numeric, 4) as \"Current\",\n  ROUND(AVG(s.spread_bps)::numeric, 4) as \"Mean\",\n  ROUND(MIN(s.spread_bps)::numeric, 4) as \"Min\",\n  ROUND(MAX(s.spread_bps)::numeric, 4) as \"Max\"\nFROM spread_stats s\nJOIN latest_spread l ON s.exchange = l.exchange\nGROUP BY s.exchange, l.current_spread\nORDER BY l.current_spread",
          "refId": "A"
        }
      ],
      "title": "Spread Statistics by Exchange",
      "type": "table"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 106,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# ðŸ“ˆ Trading Activity & Volume",
        "mode": "markdown"
      },
      "pluginVersion": "10.0.0",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 8
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  timestamp AS \"time\",\n  'Volume' as metric,\n  volume_24h as value\nFROM market_data\nWHERE \n  symbol = '$symbol' AND\n  (CASE WHEN '${exchange_view:raw}' = '__all' THEN TRUE ELSE exchange = '${exchange_view:raw}' END) AND\n  $__timeFilter(timestamp)\nORDER BY timestamp",
          "refId": "A"
        }
      ],
      "title": "24H Trading Volume (${exchange_view})",
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "yellow",
                "value": 70
              },
              {
                "color": "green",
                "value": 90
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 12,
        "y": 8
      },
      "id": 4,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  AVG(market_presence) as value \nFROM mm_performance\nWHERE \n  symbol = '$symbol' AND\n  $__timeFilter(timestamp) AND\n  (CASE \n    WHEN '${exchange_view:raw}' = '__all' THEN exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n    ELSE exchange = '${exchange_view:raw}'\n  END)",
          "refId": "A"
        }
      ],
      "title": "Data Collection Uptime %",
      "type": "gauge"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 18,
        "y": 8
      },
      "id": 5,
      "options": {
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  'Long' as metric,\n  AVG(long_account_ratio) as value\nFROM long_short_ratio\nWHERE \n  symbol = '$symbol' AND\n  $__timeFilter(timestamp)\n\nUNION ALL\n\nSELECT \n  'Short' as metric,\n  AVG(short_account_ratio) as value\nFROM long_short_ratio\nWHERE \n  symbol = '$symbol' AND\n  $__timeFilter(timestamp)",
          "refId": "A"
        }
      ],
      "title": "Long/Short Ratio",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 56
      },
      "id": 108,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# ðŸ“‰ Derivatives & Advanced Metrics",
        "mode": "markdown"
      },
      "pluginVersion": "10.0.0",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 16
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  timestamp AS \"time\",\n  'Open Interest' as metric,\n  open_interest as value\nFROM binance_perps_data\nWHERE \n  symbol = '$symbol' AND\n  $__timeFilter(timestamp)\nORDER BY timestamp",
          "refId": "A"
        }
      ],
      "title": "Open Interest",
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": true,
            "axisColorMode": "text",
            "axisLabel": "Funding Rate (%)",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Funding Rate"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 16
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "mean",
            "max",
            "min"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  timestamp AS \"time\",\n  'Funding Rate' as metric,\n  funding_rate as value\nFROM binance_perps_data\nWHERE \n  symbol = '$symbol' AND\n  funding_rate IS NOT NULL AND\n  $__timeFilter(timestamp)\nORDER BY timestamp",
          "refId": "A"
        }
      ],
      "title": "Funding Rate History",
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": true,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 50,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Buy Volume"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Sell Volume"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.transform",
                "value": "negative-Y"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH whale_threshold AS (\n  SELECT \n    PERCENTILE_CONT(0.95) WITHIN GROUP (ORDER BY quantity) as whale_min\n  FROM trades\n  WHERE symbol = '$symbol' \n    AND $__timeFilter(timestamp)\n),\nwhale_trades AS (\n  SELECT \n    date_trunc('minute', timestamp) as time,\n    CASE WHEN side = 'buy' THEN 'Buy Volume' ELSE 'Sell Volume' END as metric,\n    SUM(CASE WHEN side = 'buy' THEN quantity ELSE -quantity END) as value\n  FROM trades, whale_threshold\n  WHERE symbol = '$symbol'\n    AND quantity >= whale_min\n    AND $__timeFilter(timestamp)\n  GROUP BY date_trunc('minute', timestamp), side\n)\nSELECT \n  time,\n  metric,\n  value\nFROM whale_trades\nORDER BY time",
          "refId": "A"
        }
      ],
      "title": "Whale Activity (Buy vs Sell)",
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Live order book data from selected exchange(s)",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Exchange"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 120
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Bid Price"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "custom.width",
                "value": 110
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Bid Size"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 6
              },
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Ask Price"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "custom.width",
                "value": 110
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Ask Size"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 6
              },
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Level"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 60
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Spread"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "custom.width",
                "value": 80
              },
              {
                "id": "unit",
                "value": "currencyUSD"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 24
      },
      "id": 22,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": ["sum"],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH latest_orderbooks AS (\n  SELECT DISTINCT ON (exchange)\n    exchange,\n    bids::jsonb as bids,\n    asks::jsonb as asks,\n    timestamp\n  FROM orderbook_snapshots\n  WHERE symbol = '$symbol'\n    AND (CASE \n      WHEN '${exchange_view:raw}' = '__all' THEN TRUE\n      ELSE exchange = '${exchange_view:raw}'\n    END)\n  ORDER BY exchange, timestamp DESC\n),\nbid_levels AS (\n  SELECT \n    exchange,\n    ROW_NUMBER() OVER (PARTITION BY exchange ORDER BY (bid_data->>0)::numeric DESC) as level,\n    (bid_data->>0)::numeric as bid_price,\n    (bid_data->>1)::numeric as bid_size\n  FROM latest_orderbooks,\n    LATERAL jsonb_array_elements(bids) AS bid_data\n  WHERE jsonb_array_length(bids) > 0\n),\nask_levels AS (\n  SELECT \n    exchange,\n    ROW_NUMBER() OVER (PARTITION BY exchange ORDER BY (ask_data->>0)::numeric ASC) as level,\n    (ask_data->>0)::numeric as ask_price,\n    (ask_data->>1)::numeric as ask_size\n  FROM latest_orderbooks,\n    LATERAL jsonb_array_elements(asks) AS ask_data\n  WHERE jsonb_array_length(asks) > 0\n)\nSELECT \n  COALESCE(b.level, a.level) as \"Level\",\n  CASE COALESCE(b.exchange, a.exchange)\n    WHEN 'binance_perps' THEN 'Binance Perps'\n    WHEN 'bitget' THEN 'Bitget'\n    WHEN 'gate' THEN 'Gate.io'\n    WHEN 'kucoin' THEN 'KuCoin'\n    ELSE COALESCE(b.exchange, a.exchange)\n  END as \"Exchange\",\n  ROUND(b.bid_price::numeric, 2) as \"Bid Price\",\n  ROUND(b.bid_size::numeric, 6) as \"Bid Size\",\n  ROUND(a.ask_price::numeric, 2) as \"Ask Price\",\n  ROUND(a.ask_size::numeric, 6) as \"Ask Size\",\n  ROUND((a.ask_price - b.bid_price)::numeric, 2) as \"Spread\"\nFROM bid_levels b\nFULL OUTER JOIN ask_levels a \n  ON b.exchange = a.exchange AND b.level = a.level\nWHERE COALESCE(b.level, a.level) <= 10\nORDER BY \n  CASE COALESCE(b.exchange, a.exchange)\n    WHEN 'binance_perps' THEN 1\n    WHEN 'bitget' THEN 2\n    WHEN 'gate' THEN 3\n    WHEN 'kucoin' THEN 4\n    ELSE 5\n  END,\n  COALESCE(b.level, a.level)",
          "refId": "A"
        }
      ],
      "title": "Full Orderbook (Top 10 Levels)",
      "type": "table"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "grafana"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 40
      },
      "id": 107,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# ðŸ“Š Order Book Analysis",
        "mode": "markdown"
      },
      "pluginVersion": "10.0.0",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Number of trades executed per exchange in the selected time period",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Trade Count",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Binance Perps"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Bitget"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Gate.io"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "KuCoin"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 32
      },
      "id": 10,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull",
            "mean"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  $__timeGroup(timestamp, '5m') as time,\n  CASE exchange\n    WHEN 'binance_perps' THEN 'Binance Perps'\n    WHEN 'bitget' THEN 'Bitget'\n    WHEN 'gate' THEN 'Gate.io'\n    WHEN 'kucoin' THEN 'KuCoin'\n    ELSE exchange\n  END as metric,\n  COUNT(DISTINCT trade_id) as value\nFROM trades\nWHERE \n  symbol = '$symbol' AND\n  $__timeFilter(timestamp) AND\n  exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\nGROUP BY time, exchange\nORDER BY time, exchange",
          "refId": "A"
        }
      ],
      "title": "Trade Count by Exchange (5-min intervals)",
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Trade statistics for the selected time period",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Exchange"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 120
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total Trades"
            },
            "properties": [
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "gradient",
                  "type": "color-background"
                }
              },
              {
                "id": "color",
                "value": {
                  "mode": "continuous-GrYlRd"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Trades/Hour"
            },
            "properties": [
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Avg Size (BTC)"
            },
            "properties": [
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "decimals",
                "value": 6
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Total Volume (USDT)"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              },
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "gradient",
                  "type": "color-background"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Market Share %"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "decimals",
                "value": 1
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "lcd",
                  "type": "gauge"
                }
              },
              {
                "id": "min",
                "value": 0
              },
              {
                "id": "max",
                "value": 100
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 32
      },
      "id": 11,
      "options": {
        "footer": {
          "fields": "",
          "reducer": ["sum"],
          "show": true
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Total Trades"
          }
        ]
      },
      "pluginVersion": "10.0.3",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH trade_stats AS (\n  SELECT \n    exchange,\n    COUNT(DISTINCT trade_id) as total_trades,\n    SUM(quantity * price) as total_volume_usdt,\n    AVG(quantity) as avg_size,\n    MIN(timestamp) as first_trade,\n    MAX(timestamp) as last_trade\n  FROM trades\n  WHERE \n    symbol = '$symbol' AND\n    $__timeFilter(timestamp)\n  GROUP BY exchange\n),\ntotal_market AS (\n  SELECT \n    SUM(total_trades) as market_total\n  FROM trade_stats\n)\nSELECT \n  CASE ts.exchange\n    WHEN 'binance_perps' THEN 'Binance Perps'\n    WHEN 'bitget' THEN 'Bitget'\n    WHEN 'gate' THEN 'Gate.io'\n    WHEN 'kucoin' THEN 'KuCoin'\n    ELSE ts.exchange\n  END as \"Exchange\",\n  ts.total_trades as \"Total Trades\",\n  ROUND(ts.total_trades / GREATEST(EXTRACT(EPOCH FROM (ts.last_trade - ts.first_trade)) / 3600, 1)) as \"Trades/Hour\",\n  ts.avg_size as \"Avg Size (BTC)\",\n  ROUND(ts.total_volume_usdt) as \"Total Volume (USDT)\",\n  ROUND((ts.total_trades::numeric / tm.market_total::numeric) * 100, 1) as \"Market Share %\"\nFROM trade_stats ts, total_market tm\nWHERE ts.exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\nORDER BY ts.total_trades DESC",
          "refId": "A"
        }
      ],
      "title": "Trade Count Statistics",
      "type": "table"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Depth at different price levels from mid",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": true,
            "axisColorMode": "text",
            "axisLabel": "Volume (USDT)",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Bid Depth"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Ask Depth"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.transform",
                "value": "negative-Y"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 40
      },
      "id": 12,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH latest_data AS (\n  SELECT DISTINCT ON (mm.exchange)\n    mm.exchange,\n    mm.bid_depth_1pct,\n    mm.ask_depth_1pct,\n    mm.bid_depth_2pct,\n    mm.ask_depth_2pct,\n    md.last_price\n  FROM mm_metrics mm\n  JOIN market_data md ON mm.exchange = md.exchange AND mm.symbol = md.symbol\n  WHERE mm.symbol = '$symbol'\n    AND $__timeFilter(mm.timestamp)\n    AND $__timeFilter(md.timestamp)\n  ORDER BY mm.exchange, mm.timestamp DESC\n)\nSELECT \n  '0.5%' as price_level,\n  ROUND((bid_depth_1pct * 0.5 * last_price)::numeric, 0) as \"Bid Depth (USDT)\",\n  ROUND((-ask_depth_1pct * 0.5 * last_price)::numeric, 0) as \"Ask Depth (USDT)\"\nFROM latest_data\nWHERE (CASE \n  WHEN '${exchange_view:raw}' = '__all' THEN exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n  ELSE exchange = '${exchange_view:raw}'\nEND)\n\nUNION ALL\n\nSELECT \n  '1%' as price_level,\n  ROUND((bid_depth_1pct * last_price)::numeric, 0) as \"Bid Depth (USDT)\",\n  ROUND((-ask_depth_1pct * last_price)::numeric, 0) as \"Ask Depth (USDT)\"\nFROM latest_data\nWHERE (CASE \n  WHEN '${exchange_view:raw}' = '__all' THEN exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n  ELSE exchange = '${exchange_view:raw}'\nEND)\n\nUNION ALL\n\nSELECT \n  '2%' as price_level,\n  ROUND((bid_depth_2pct * last_price)::numeric, 0) as \"Bid Depth (USDT)\",\n  ROUND((-ask_depth_2pct * last_price)::numeric, 0) as \"Ask Depth (USDT)\"\nFROM latest_data\nWHERE (CASE \n  WHEN '${exchange_view:raw}' = '__all' THEN exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n  ELSE exchange = '${exchange_view:raw}'\nEND)\n\nORDER BY price_level",
          "refId": "A"
        }
      ],
      "title": "Liquidity Depth Profile",
      "type": "barchart"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Trade size distribution patterns",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "fillOpacity": 70,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineWidth": 0,
            "spanNulls": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 40
      },
      "id": 13,
      "options": {
        "barRadius": 0,
        "barWidth": 0.8,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": ["sum"],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "vertical",
        "showValue": "auto",
        "stacking": "normal",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  $__timeGroupAlias(timestamp, 5m),\n  CASE \n    WHEN quantity * price < 1000 THEN 'Small (<1K USDT)'\n    WHEN quantity * price < 10000 THEN 'Medium (1K-10K USDT)'\n    WHEN quantity * price < 100000 THEN 'Large (10K-100K USDT)'\n    ELSE 'Very Large (>100K USDT)'\n  END as metric,\n  COUNT(*) as value\nFROM trades\nWHERE symbol = '$symbol'\n  AND (CASE \n    WHEN '${exchange_view:raw}' = '__all' THEN exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n    ELSE exchange = '${exchange_view:raw}'\n  END)\n  AND $__timeFilter(timestamp)\nGROUP BY time, metric\nORDER BY time",
          "refId": "A"
        }
      ],
      "title": "Trade Size Distribution",
      "type": "barchart"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Spread evolution over time with quality metrics",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Spread (bps)",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 5
              },
              {
                "color": "red",
                "value": 10
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 50
      },
      "id": 14,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "min",
            "max"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \n  timestamp as time,\n  exchange as metric,\n  spread_bps as value\nFROM mm_metrics\nWHERE symbol = '$symbol'\n  AND (CASE \n    WHEN '${exchange_view:raw}' = '__all' THEN exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n    ELSE exchange = '${exchange_view:raw}'\n  END)\n  AND $__timeFilter(timestamp)\n  AND spread_bps IS NOT NULL\n  AND spread_bps < 100\nORDER BY timestamp",
          "refId": "A"
        }
      ],
      "title": "Spread Maintenance Quality",
      "type": "timeseries"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Recent trades across all selected exchanges",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 150
              },
              {
                "id": "unit",
                "value": "dateTimeAsLocal"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Exchange"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 120
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Price"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              },
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Quantity"
            },
            "properties": [
              {
                "id": "decimals",
                "value": 6
              },
              {
                "id": "custom.width",
                "value": 100
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value (USDT)"
            },
            "properties": [
              {
                "id": "unit",
                "value": "currencyUSD"
              },
              {
                "id": "decimals",
                "value": 0
              },
              {
                "id": "custom.width",
                "value": 120
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Side"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 60
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "buy": {
                        "color": "green",
                        "index": 0,
                        "text": "BUY"
                      }
                    },
                    "type": "value"
                  },
                  {
                    "options": {
                      "sell": {
                        "color": "red",
                        "index": 1,
                        "text": "SELL"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Trade ID"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 150
              },
              {
                "id": "custom.hidden",
                "value": false
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 58
      },
      "id": 23,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": ["sum"],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Time"
          }
        ]
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH recent_trades AS (\n  SELECT \n    timestamp,\n    exchange,\n    price,\n    quantity,\n    side,\n    trade_id,\n    ROW_NUMBER() OVER (ORDER BY timestamp DESC) as rn\n  FROM trades\n  WHERE symbol = '$symbol'\n    AND $__timeFilter(timestamp)\n    AND (CASE \n      WHEN '${exchange_view:raw}' = '__all' THEN exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n      ELSE exchange = '${exchange_view:raw}'\n    END)\n)\nSELECT \n  timestamp as \"Time\",\n  CASE exchange\n    WHEN 'binance_perps' THEN 'Binance Perps'\n    WHEN 'bitget' THEN 'Bitget'\n    WHEN 'gate' THEN 'Gate.io'\n    WHEN 'kucoin' THEN 'KuCoin'\n    ELSE exchange\n  END as \"Exchange\",\n  ROUND(price::numeric, 2) as \"Price\",\n  ROUND(quantity::numeric, 6) as \"Quantity\",\n  ROUND((price * quantity)::numeric, 0) as \"Value (USDT)\",\n  UPPER(side) as \"Side\",\n  trade_id as \"Trade ID\"\nFROM recent_trades\nWHERE rn <= 25\nORDER BY timestamp DESC",
          "refId": "A"
        }
      ],
      "title": "Last 25 Trades (All Exchanges)",
      "type": "table"
    },
    {
      "datasource": "grafana-postgresql-datasource",
      "description": "Order book buy/sell pressure visualization - Positive (green) = More Bids, Negative (red) = More Asks",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "scaleDistribution": {
              "type": "linear"
            }
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 68
      },
      "id": 15,
      "options": {
        "calculate": false,
        "calculation": {},
        "cellGap": 1,
        "cellValues": {},
        "color": {
          "exponent": 0.5,
          "fill": "dark-orange",
          "mode": "scheme",
          "reverse": false,
          "scale": "exponential",
          "scheme": "RdYlGn",
          "steps": 64
        },
        "exemplars": {
          "color": "rgba(255,0,255,0.7)"
        },
        "filterValues": {
          "le": 1e-09
        },
        "legend": {
          "show": true
        },
        "rowsFrame": {
          "layout": "auto"
        },
        "tooltip": {
          "show": true,
          "yHistogram": false
        },
        "yAxis": {
          "axisPlacement": "left",
          "reverse": false
        }
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": "grafana-postgresql-datasource",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "WITH book_imbalance AS (\n  SELECT \n    timestamp,\n    exchange,\n    CASE \n      WHEN bid_depth_1pct + ask_depth_1pct > 0 THEN\n        ((bid_depth_1pct - ask_depth_1pct) / NULLIF(bid_depth_1pct + ask_depth_1pct, 0)) * 100\n      ELSE 0\n    END as imbalance_pct\n  FROM mm_metrics\n  WHERE symbol = '$symbol'\n    AND $__timeFilter(timestamp)\n    AND bid_depth_1pct IS NOT NULL\n    AND ask_depth_1pct IS NOT NULL\n    AND exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n)\nSELECT \n  timestamp as time,\n  CASE exchange\n    WHEN 'binance_perps' THEN 'Binance Perps'\n    WHEN 'bitget' THEN 'Bitget'\n    WHEN 'gate' THEN 'Gate.io'\n    WHEN 'kucoin' THEN 'KuCoin'\n    ELSE exchange\n  END as metric,\n  imbalance_pct as value\nFROM book_imbalance\nWHERE (CASE \n  WHEN '${exchange_view:raw}' = '__all' THEN exchange IN ('binance_perps', 'gate', 'kucoin', 'bitget')\n  ELSE exchange = '${exchange_view:raw}'\nEND)\nORDER BY timestamp, exchange",
          "refId": "A"
        }
      ],
      "title": "Order Book Imbalance Heatmap",
      "type": "heatmap"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "crypto",
    "market-analytics"
  ],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "grafana-postgresql-datasource",
          "value": "grafana-postgresql-datasource"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "postgres",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "selected": true,
          "text": "BTCUSDT",
          "value": "BTCUSDT"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Symbol",
        "multi": false,
        "name": "symbol",
        "options": [
          {
            "selected": true,
            "text": "BTCUSDT",
            "value": "BTCUSDT"
          },
          {
            "selected": false,
            "text": "ETHUSDT",
            "value": "ETHUSDT"
          }
        ],
        "query": "BTCUSDT",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": true,
          "text": "All Exchanges",
          "value": "__all"
        },
        "hide": 0,
        "includeAll": true,
        "includeAllValue": "__all",
        "label": "Exchange View",
        "multi": false,
        "name": "exchange_view",
        "options": [
          {
            "selected": true,
            "text": "All Exchanges",
            "value": "__all"
          },
          {
            "selected": false,
            "text": "Binance Perps",
            "value": "binance_perps"
          },
          {
            "selected": false,
            "text": "Gate.io",
            "value": "gate"
          },
          {
            "selected": false,
            "text": "KuCoin",
            "value": "kucoin"
          },
          {
            "selected": false,
            "text": "Bitget",
            "value": "bitget"
          }
        ],
        "query": "__all,binance_perps,gate,kucoin,bitget",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Market Analytics Dashboard",
  "uid": "crypto-market-analytics",
  "version": 1,
  "weekStart": ""
}